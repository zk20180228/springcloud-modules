server:
  port: 7999
spring:
  application:
    name: gateway-sentinel
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.241.13:8848
        username: nacos
        password: nacos
        namespace: public
        metadata:
          AA: aa
          BB: bb
    #网关相关配置
    gateway:
      enabled: true
      discovery:
        locator:
          lower-case-service-id: true
      routes:
        - id: ribbon-provider-custom-rule
          uri: lb://ribbon-provider-custom-rule
          order: 1
          predicates:
            - Path=/gateway-sentinel/**
          filters:
            - StripPrefix=1
      globalcors:
        cors-configurations:
          '[/**]':
              allowedOrigins: "*"
              allowedHeaders: "*"
              allowedMethods: "*"
              allowCredentials: false
              maxAge: 3600
      filter:
        hystrix:
          enabled: false
    #sentinel相关配置
    sentinel:
      web-context-unify: false
      eager: true
      transport:
        dashboard: 192.168.241.13:7888
        port: 8719
      log:
        switch-pid: true
      filter:
        #若通过 Spring Cloud Alibaba 接入，请将 spring.cloud.sentinel.filter.enabled 配置项置为 false（若在网关流控控制台上看到了 URL 资源，就是此配置项没有置为 false）
        enabled: false
      scg:
        #配置限流后的异常信息
#        fallback:
#          mode: response
#          response-body:  '{"code":403,"mes":"系统繁忙，请稍后重试"}'
#springcloud-gateway使用的ribbon进行负载均衡，在这里进行ribbon的负载规则的配置
#通过yml方式配置指定被调用方的负载均衡策略
#被调用的服务方的名字
ribbon-provider-custom-rule:
  ribbon:
    #负责均衡规则类
    NFLoadBalancerRuleClassName: com.alibaba.cloud.nacos.ribbon.NacosRule
#Ribbon默认懒加载，意味着只有在发起调用的时候才会创建客户端(可以认为是ribbon的初始化工作)。
#ribbon开启饥饿加载，以及配置饥饿加载
ribbon:
  #所有服务都使用ZoneAvoidanceRule(默认不配置也是它)
  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.ZoneAvoidanceRule
  eager-load:
    clients: ribbon-provider-custom-rule
    enabled: true
